#!/usr/bin/env python
# run phyml with standard command-line interface

import sys, os, shutil
import optparse

from rasmus import util, treelib
from rasmus.bio import phylip, fasta
from rasmus.bio import phylorun as phy


o = optparse.OptionParser()
o.add_option("-m", "--model", dest="model", metavar="MODEL")
phy.add_common_options(o)
conf, files = phy.parse_common_options(o)

result = 0
for fn in files:
    basename = phy.get_basename(fn, conf)

    outdir = basename + conf.outputext
    phy.make_output_dir(outdir)
    align = fasta.read_fasta(basename + conf.alignext)
    labels = phylip.writePhylipAlign(file(outdir + "/infile", "w"), align,
                                     False)
    util.write_list(file(outdir + "/labels", "w"), labels)

    # require minimium size of alignment
    if len(align) <= 2:
        continue

    # set user tree
    if conf.usertreeext:
        tree = treelib.read_tree(basename + conf.usertreeext)
        treelib.unroot(tree, newCopy=False)
        usertree = outdir + "/usertree"
        tree.write(usertree)
    else:
        usertree = "BIONJ"
    

    nrates = 4
    if conf.seqtype == "dna":
        if not conf.model:
            model = "HKY"
        args = "'%s/infile' 0 s 1 %d %s e e %d e %s %s y" % \
               (outdir, conf.boot, conf.model, nrates, usertree,
                "ny"[int(conf.opttree)])
    else:
        if not conf.model:
            conf.model = "JTT"
        args = "'%s/infile' 1 s 1 %d %s e %d e %s %s y" % \
               (outdir, conf.boot, conf.model, nrates, usertree,
                "ny"[int(conf.opttree)])
    cmd = "phyml " + args + " > '%s/out'" % outdir
    print cmd
    out = open(outdir + "/cmd", "w")
    out.write(cmd)
    out.close()
    if os.system(cmd) != 0:
        open(outdir + "/error", "w").close()
        result = 1
    else:
        tree = treelib.read_tree(outdir + "/infile_phyml_tree.txt")
        tree.write(basename + conf.treeext)

sys.exit(result)
