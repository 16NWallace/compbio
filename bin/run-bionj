#!/usr/bin/env python
# run mrbayes with standard command-line interface

import sys, os, shutil
import optparse

from rasmus import util, treelib
from rasmus.bio import phylip, fasta, mrbayes
from rasmus.bio import phylorun as phy


def write_dist_matrix(mat, labels, out=sys.stdout):
    out = util.open_stream(out, "w")
    
    out.write("%d\n" % len(mat))
    
    for i in range(len(mat)):
        out.write("%s  " % labels[i])        
        for val in mat[i]:
            out.write("%10f " % val)
        out.write("\n")



o = optparse.OptionParser()
phy.add_common_options(o)
conf, files = phy.parse_common_options(o)

result = 0
for fn in files:
    basename = phy.get_basename(fn, conf)
    
    outdir = basename + conf.outputext
    phy.make_output_dir(outdir)
    align = fasta.readFasta(basename + conf.alignext)    

    if len(align) <= 2:
        continue

    if conf.usertreeext:
        raise Exception("Can't specify usertree for bionj")
    
    # make temp files
    distfile = outdir + "/dist"
    treefile = basename + conf.treeext
    
    # find distances    
    if conf.seqtype == "pep":
        labels = phylip.protdist(align, distfile, verbose=True)
    else:
        labels = phylip.dnadist(align, distfile, verbose=True)

    labels_junk, distmat = phylip.readDistMatrix(distfile)
    write_dist_matrix(distmat, labels, distfile)

    
    cmd = "echo -n '%s\n%s' | bionj > '%s/out'" % (distfile, treefile, outdir)
    print cmd

    out = open(outdir + "/cmd", "w")
    out.write(cmd)
    out.close()
    if os.system(cmd) != 0:
        open(outdir + "/error", "w").close()
        result = 1


sys.exit(result)
