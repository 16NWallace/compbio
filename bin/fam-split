#!/usr/bin/env python


import sys, os, shutil

from rasmus import util
from rasmus import treelib

from rasmus.bio import phylo
from rasmus.bio import genomeutil
from rasmus.bio import fasta
from rasmus.bio import alignlib


options = [
 ["o:", "olddir=", "olddir", "<old family directory>",
  {"single": True}],
 ["n:", "newdir=", "newdir", "<new family directory>",
  {"single": True}],
 ["i:", "famid=", "famid", "<starting famid>",
  {"single": True}],

 ["F:", "fastaext=", "fastaext", "<fasta file extension>"],
 ["A:", "alignext=", "alignext", "<align file extension>"],
 #["P:", "partext=", "partext", "<partition file extension>",
 #   {"single": True,
 #    "default": ".split"}],

 ["T:", "treeext=", "treeext", "<new tree filename extension>",
    {"single": True}],
 ["Y:", "subtreeext=", "subtreeext", "<old subtree filename extension>",
    {"single": True}],
]

conf = util.parseOptions(sys.argv, options)

famid = int(conf["famid"])
for line in sys.stdin:
    split_filename = line.rstrip()
    oldpath = os.path.dirname(split_filename)
    oldfamid = os.path.split(oldpath)[1]
    
    part = util.readDelim(split_filename)

    # old FASTAs
    oldfastas = []
    for ext in conf["fastaext"]:
        oldfastas.append(fasta.read_fasta(os.path.join(oldpath,
                                                      oldfamid + ext)))

    # old aligns
    oldaligns = []
    for ext in conf["alignext"]:
        oldaligns.append(fasta.read_fasta(os.path.join(oldpath,
                                                      oldfamid + ext)))
    

    for subtreeind in xrange(1, len(part)+1):
        genes = part[subtreeind-1]

        # ensure new dir exists
        newfamdir = os.path.join(conf["newdir"], str(famid))
        if not os.path.exists(newfamdir):
            os.mkdir(newfamdir)

        # copy over tree
        oldtree = os.path.join(oldpath, oldfamid + 
                             conf["subtreeext"].replace("{}", str(subtreeind)))
        newtree = os.path.join(conf["newdir"], str(famid),
                               str(famid) + conf["treeext"])
        shutil.copy(oldtree, newtree)
        print oldtree, "==>", newtree

        # write fastas
        for fa, ext in zip(oldfastas, conf["fastaext"]):
            newfa = fa.get(genes)
            newfa.write(os.path.join(conf["newdir"], str(famid),
                                     str(famid) + ext))

        # write alignment
        for aln, ext in zip(oldaligns, conf["alignext"]):
            newaln = aln.get(genes)
            newaln = alignlib.removeEmptyColumns(newaln)
            newaln.write(os.path.join(conf["newdir"], str(famid),
                                      str(famid) + ext))        
        
        # increase indexes
        famid += 1
    


    
    
