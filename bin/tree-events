#!/usr/bin/env python

import sys, optparse
from rasmus import util, treelib, tablelib
from rasmus.bio import phylo, paml
from rasmus.vis import treesvg


o = optparse.OptionParser()
o.add_option("-s", "--stree", dest="stree",
             metavar="<species tree>",
             help="species tree (newick format)")
o.add_option("-S", "--smap", dest="smap",
             metavar="<gene2species map>",
             help="mapping of gene names to species names")



def read_trees(infile):
    """Read a data stream of trees in newick format"""
    
    tree = treelib.read_tree(infile)
    yield tree

    # try to read more trees
    while True:
        try:
            tree = treelib.read_tree(infile)
            yield tree
        except Exception, e:
            break


def main(conf, args):

    if conf.stree is None or conf.smap is None:
        print >>sys.stderr, "missing arguments -s -S"
        return 1

    stree = treelib.read_tree(conf.stree)
    gene2species = phylo.read_gene2species(conf.smap)

    trees = read_trees(sys.stdin)
    etree = phylo.count_dup_loss_trees(trees, stree, gene2species)

    ptable = treelib.tree2parent_table(etree,
                                       ["genes", "dup", "loss", "appear"])
    # sort by post order
    lookup = util.list2lookup(x.name for x in stree.postorder())
    ptable.sort(key=lambda x: lookup[x[0]])

    ptable = [[str(row[0]), str(row[1]), float(row[2])] + row[3:]
              for row in ptable]
    
    tab = tablelib.Table(ptable,
                         headers=["nodeid", "parentid", "dist", "genes",
                                  "dup", "loss", "appear"])
    tab.write()
    return 0
    

conf, args = o.parse_args()
sys.exit(main(conf, args))
